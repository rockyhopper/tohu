package org.tohu.examples.loyalty.loyalty_complex_app;

import java.util.Calendar;
import org.tohu.Group;
import org.tohu.InvalidAnswer;
import org.tohu.MultipleChoiceQuestion;
import org.tohu.MultipleChoiceQuestion.PossibleAnswer;
import org.tohu.Note;
import org.tohu.Question;
import org.tohu.Answer;
import org.tohu.Questionnaire;
import org.tohu.support.TohuDataItemObject;

import org.tohu.examples.loyalty.*;

rule "Branch JointOFGroupDataItems"
salience 75
no-loop
when
	pe1 : Question(id == "onlineFoodJoint"  );
	Answer (questionId == pe1.id , value == "true");
	q : Questionnaire(items not contains "JointOFGroupDataItems");
then
	if (q.isBranched() == false) {
		q.navigationBranch(new String[]{"JointOFGroupDataItems"}, "JointOFGroupDataItems");
	}
	else {
		q.appendItem("JointOFGroupDataItems", q.getActiveItem());
	}
	update(q);
end

rule "JointOFGroupDataItems"
dialect "mvel"
no-loop
when
	pe1 : Question(id == "onlineFoodJoint" , answer == "true");
then
	Group aGroup = new Group("JointOFGroupDataItems");
	aGroup.setLabel("Please specify the loyalty programdetails.");
	aGroup.setItems({"JointOFGroup"});
	insertLogical(aGroup);
end

rule "JointOFGroup"
dialect "mvel"
no-loop
when
	$group : Group (id == "JointOFGroupDataItems");
then
	Group aGroup = new Group("JointOFGroup");
	aGroup.setLabel("8");
	aGroup.setItems({
		"jofMembershipNumber",
		"jofMembershipName",
		"jofSpecialOffers"});
	insertLogical(aGroup);
end

rule "jofMembershipNumber"
dialect "mvel"
no-loop
when
	$group : Group (id == "JointOFGroup");
then
	Question aQuestion = new Question("jofMembershipNumber");
	aQuestion.setAnswerType(Question.TYPE_TEXT);
	aQuestion.setPreLabel("Membership number");
	insertLogical(aQuestion);
end

rule "jofMembershipName"
dialect "mvel"
no-loop
when
	$group : Group (id == "JointOFGroup");
then
	Question aQuestion = new Question("jofMembershipName");
	aQuestion.setAnswerType(Question.TYPE_TEXT);
	aQuestion.setPreLabel("Membership name");
	insertLogical(aQuestion);
end

rule "jofSpecialOffers"
dialect "mvel"
no-loop
when
	$group : Group (id == "JointOFGroup");
then
	Question aQuestion = new Question("jofSpecialOffers");
	aQuestion.setAnswerType(Question.TYPE_BOOLEAN);
	aQuestion.setPreLabel("Do you want to receive combined special offers?");
	insertLogical(aQuestion);
end

